<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:mvc="http://www.springframework.org/schema/mvc"
	   xmlns:context="http://www.springframework.org/schema/context"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc-4.2.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

	<!-- 扫描包起始处 -->
	<context:component-scan base-package="io.github.igordonxiao.controller"/>

	<!-- json转换器 -->
	<mvc:annotation-driven>
		<mvc:message-converters register-defaults="true">
			<!-- 配置Fastjson支持 -->
			<bean class="com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter">
				<property name="supportedMediaTypes">
					<list>
						<value>text/html;charset=UTF-8</value>
						<value>application/json</value>
					</list>
				</property>
				<property name="features">
					<list>
						<value>WriteMapNullValue</value>
						<value>QuoteFieldNames</value>
					</list>
				</property>
			</bean>
		</mvc:message-converters>
	</mvc:annotation-driven>

	<!-- 视图解析器 -->
	<!--<mvc:view-resolvers>
		<mvc:jsp prefix="/WEB-INF/view/" suffix=".jsp"/>
	</mvc:view-resolvers>-->

	 <!-- 使用jetbrick template -->
	<bean id="viewResolver" class="jetbrick.template.web.springmvc.JetTemplateViewResolver">
		<property name="order" value="1" />
		<property name="contentType" value="text/html; charset=utf-8" />
		<property name="prefix" value="/WEB-INF/view/" />
		<property name="suffix" value=".jetx" />

		<!-- 指定配置文件 -->
		<property name="configLocation" value="/WEB-INF/jetbrick-template.properties" />

		<!-- 直接配置属性, 优先级高于指定配置文件中的内容-->
		<property name="configProperties">
			<props>
				<prop key="jetx.input.encoding">utf-8</prop>
				<prop key="jetx.output.encoding">utf-8</prop>
			</props>
		</property>
	</bean>
	
	<mvc:default-servlet-handler/>
	<!-- 设置用来直接访问静态资源文件 -->
	<mvc:resources location="/static/" mapping="/static/**" />

	<!-- 异常处理 -->
	<bean id="exceptionResolver" class="io.github.igordonxiao.resolver.CustomSimpleMappingExceptionResolver">
		<property name="defaultErrorView" value="error/500"/>
		<property name="defaultStatusCode" value="500"/>
		<property name="statusCodes">
			<props>
				<prop key="error/500">500</prop>
				<prop key="error/404">404</prop>
			</props>
		</property>
		<property name="exceptionMappings">
			<props>
				<prop key="java.lang.Exception">error/500</prop>
				<prop key="java.lang.NoSuchMethodError">error/500</prop>
			</props>
		</property>
	</bean>

	<!-- 自定义的拦截器,多个拦截器,顺序执行,先按顺序调用preHandle方法，然后逆序调用每个拦截器的postHandle和afterCompletion方法-->
	<mvc:interceptors>
		<mvc:interceptor>
			<!-- 匹配的是url路径， 如果不配置或/**,将拦截所有的Controller -->
			<mvc:mapping path="/**" />
			<bean class="io.github.igordonxiao.interceptor.WebRootInterceptor"/>
		</mvc:interceptor>
		<mvc:interceptor>
			<!-- 拦截main页面及所有的业务接口-->
			<mvc:mapping path="/**" />
			<mvc:exclude-mapping path="/"/>
			<mvc:exclude-mapping path="/static/**"/>
			<mvc:exclude-mapping path="/login"/>
			<mvc:exclude-mapping path="/logout"/>
			<bean class="io.github.igordonxiao.interceptor.SessionIntercepter"/>
		</mvc:interceptor>
	</mvc:interceptors>
</beans>